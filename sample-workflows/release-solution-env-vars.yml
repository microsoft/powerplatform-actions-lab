name: release-solution-env-vars
# prepare for releasing to prod:
#   convert solution to managed (using a build PowerPlatform environment for the conversion)
#   upload the solution to the GitHub artifacts and deploy to the PROD environment

on:
  workflow_dispatch:
    
  release:
    types: [created]
    
       
  

env:
#edit your values here
  BUILD_ENVIRONMENT_URL: 'https://kartiksenv.crm.dynamics.com/'
  PRODUCTION_ENVIRONMENT_URL: 'https://kartiksenvqa.crm.dynamics.com'
  CLIENT_ID: 'd4416ad8-8ed5-4776-95b7-80985180bcc0'
  TENANT_ID: 'ec6b17bb-11d0-4195-abd0-521c69a5d1fd'
  solution_name: '<SolutionName>'
  solution_shipping_folder: 'out/ship'
  solution_outbound_folder: 'solutions/<SolutionName>/bin/Debug'
  solution_source_folder: 'solutions/'
  solution_release_folder: 'out/release'
  

jobs:
  convert-to-managed:
    #runs-on: ubuntu-latest
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    #- name: Setup .NET
    #  uses: actions/setup-dotnet@v1
    #  with:
    #    dotnet-version: 5.0.x

    #- name: Pack solution
     # uses: microsoft/powerplatform-actions@v0
      #with:
       # solution-folder: ${{ github.event.inputs.solution_source_folder}}/${{ github.event.inputs.solution_name }}
        #solution-file: ${{ github.event.inputs.solution_outbound_folder}}/${{ github.event.inputs.solution_name }}.zip
        #solution-type: Unmanaged
    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
    
    - name: Import solution as unmanaged to build env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-file: ${{ env.solution_outbound_folder}}/${{ env.solution_name }}.zip
        run-asynchronously: true
        force-overwrite: true
        publish-changes: true

    - name: Export solution as managed
      uses: microsoft/powerplatform-actions/export-solution@v0
      with:
        environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ env.solution_name }}
        managed: true
        solution-output-file: ${{ env.solution_shipping_folder}}/${{ env.solution_name }}.zip

    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-artifact@v2
      with:
        name: managedSolutions
        path: ${{ env.solution_shipping_folder}}/${{ env.solution_name }}.zip

  release-to-staging:
    needs: [ convert-to-managed ]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Fetch the ready to ship solution from GH artifact store
      uses: actions/download-artifact@v2
      with:
        name: managedSolutions
        path: ${{ env.solution_release_folder}}
    - name: Import solution to prod env
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{env.PRODUCTION_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-file: ${{ env.solution_release_folder}}/${{ env.solution_name }}.zip
        run-asynchronously: true
        force-overwrite: true
        publish-changes: true
